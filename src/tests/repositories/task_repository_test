import unittest
from datetime import datetime, timedelta
from repositories.pomodoro_repository import pomodoro_repository
from entities.pomodoro import PomodoroSession

class TestPomodoroRepository(unittest.TestCase):
    def setUp(self):
        pomodoro_repository.delete_all()
        now = datetime.now()

        self.session1 = PomodoroSession(
            task_id="task001",
            start_time=now,
            end_time=now + timedelta(minutes=10),
            duration=10
        )
        self.session2 = PomodoroSession(
            task_id="task002",
            start_time=now,
            end_time=now + timedelta(minutes=30),
            duration=30
        )

    def test_create(self):
        pomodoro_repository.create(self.session1)
        sessions = pomodoro_repository.find_all()

        self.assertEqual(len(sessions), 1)
        self.assertEqual(sessions[0].task_id, self.session1.task_id)

    def test_find_all(self):
        pomodoro_repository.create(self.session1)
        pomodoro_repository.create(self.session2)

        sessions = pomodoro_repository.find_all()
        self.assertEqual(len(sessions), 2)

    def test_find_by_task_id(self):
        pomodoro_repository.create(self.session1)
        pomodoro_repository.create(self.session2)

        found = pomodoro_repository.find_by_task_id("task001")
        self.assertEqual(len(found), 1)
        self.assertEqual(found[0].duration, 10)

    def test_delete_all(self):
        pomodoro_repository.create(self.session1)
        pomodoro_repository.create(self.session2)

        pomodoro_repository.delete_all()
        sessions = pomodoro_repository.find_all()
        self.assertEqual(len(sessions), 0)


if __name__ == "__main__":
    unittest.main()
